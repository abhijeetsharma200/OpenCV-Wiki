h1. 2017  OpenCV Meeting notes

Template is at "http://code.opencv.org/projects/opencv/wiki/Template":http://code.opencv.org/projects/opencv/wiki/Template
"http://code.opencv.org/help/wiki_syntax":http://code.opencv.org/help/wiki_syntax

[[Meeting_notes]]

<pre>
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-mm-dd

h3. _*Agenda*_
* 

h3. *_Minutes_*
*

h3. *_To Dos_*
* 

<pre>
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-09-09

h3. _*Agenda*_
* GSoC

h3. *_Minutes_*
*

h3. *_To Dos_*
* 


<pre>
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-09-26

h3. _*Agenda*_
* GSoC starts again
* Javascript
* DNN

h3. *_Minutes_*
* *GSoC*
** Basic themes
*** _Ever better Python integration -- pybind next for cv::Mat to make it seemless_
*** _ Vision kernels to Halide -- ever more optimized_
*** _More support for DNN -- more kernels, functionality, moved to learned, memory efficient nets_
** Payoneer payment is in ... didn't miss the deadline!
** Image processing kernels => Halide
*** So that we can automatically generate vectorized code
*** And an OpenCL backend
*** Can generate OpenGL, Cuda, and many more kernals
** Python bindings ... boost python
*** C++ bindings OpenCV cv::Mat to pybind so that we are more seemless in Python
**** Exposing more of cv::Mat
**** computational photography
** Waiting for final videos from GSoC
* *Javascript bindings are now integrated into OpenCV main supported code!* 
** ... big win from this years GSoC and lots of thanks to *Intel* And... 
** Super thanks to *Mohammad Haghighat* for kicking this off and seeing it through
* *16b floating point format*
** We are adding for OpenCV so that it can run more memory efficient floating point operations, particularly for deepnets
* *DNN*
** TensorFlow, Caffe, Torch, and some darknet
** For GSoC, theme of squeezing memory down for model zoo of very memory efficient nets
*** Fixed point networks, memory tuning, etc. (last CVPR). 100Mb down to 5Mb
**** Not just quantization. Represent each product of weights as product of 3 factorized matrices UVD
***** U and V consist of -1, 0, 1 and diagonal 
** CPU optimization already
** GPU optimization merged soon ... OpenCL, but tuned so far for integrated GPU
*** So, if there is OpenCL optimization, it can be backported in

h3. *_To Dos_*
* Complete legal transformation of OpenCV. Take Fenwick and West up on their offer



<pre>
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-09-19

h3. _*Agenda*_
* Next GSoC
* Python documentation

h3. *_Minutes_*
* Advance Tiny-dnn
* Replace things with DNN
* Shrinking nets in 2 different ways
** Need something for loading third party data/nets
** Support for vectorized matrices
** Want standardized compressed model
** Then: Tensorflow vs Pytorch ... Keras
* Python interface
** Pybind 11 ... interfacing C++ code w/Python
*** They may need to expose more Mat functionality to Python
** numpy w/OpenCV
** Conda ... need to support old Visual Studio version???
* GSoC getting projects in
** Mentors can contact Vadim for accepted pulls
*** About 60 pull requests in main and in contrib, going through them now

h3. *_To Dos_*
* --W9 form-- Done! Payoneer payments are in


<pre>
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-09-12

h3. _*Agenda*_
* Python
* deep connection cv
* GSoC

h3. *_Minutes_*
* Python
** Can build for opencv_contrib
** make sure ffmpeg found for highgui
** pip didn't install opencv that could read mp4... on linux,
*** might have to do it from scratch
* deep connection with cv
** take simple operators and train deep net on them
*** optimize
*** replace functionality
** see "Vladlen Koltun's work":http://vladlen.info/
*** "Fast Image Processing with Fully-Convolutional Networks":http://vladlen.info/publications/fast-image-processing-fully-convolutional-networks/
*** "Learning to inpaint":http://vladlen.info/publications/learning-inpaint-image-compression/
** Need to think of what form this should be and where to store networks
** Think about "low level optimization for networks (TVM)":https://github.com/tqchen/tvm/blob/master/docs/faq.md
*** people have already forked tiny-dnn for FPGA
*** ways to express kernels on different hardware
*** "Exchanging networks between frameworks":https://github.com/onnx/onnx
* GSoC
** Waiting on tax form W9
** "Final spreadsheet":https://docs.google.com/spreadsheets/d/1xq8G2CqKvPzomBwsslNr2sP0FBygBVpfUQyOUtZ-Nro/edit#gid=1645794771 (not public, for mentors):
*** 

h3. *_To Dos_*
* Gary, finish W9
* Vincent to solicit videos from people

<pre>
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-06-27

h3. _*Agenda*_
* GSoC
* CVPR
* DNN (Deep Neural Network) module

h3. *_Minutes_*
* *GSOC*
** Evaluations due by, Friday, June 30. 
** "See the Google timeline":https://summerofcode.withgoogle.com/how-it-works/
** "Start evaluations here":https://summerofcode.withgoogle.com/dashboard/
** "OpenCV Google Summer of Code 2017 page":https://github.com/opencv/opencv/wiki/GSoC_2017
* *"CVPR":http://cvpr2017.thecvf.com/program/main_conference*
** Most of us get in the Thursday before the tutorials. Meet up!
** We will have a sponsored bar meet somewhere for collected students, professionals etc, TBD
** OpenCV will be running a tutorial: "OpenCV 3.x New Functionality & Optimizations":http://cvpr2017.thecvf.com/program/tutorials
* *OpenCV 3.3 Release*
** It planned to be out middle of July
** But it's ahead of schedule!
*** Maybe out next week or week after, early part of week
** Major news is that DNN Module is moving out of "opencv_contrib":https://github.com/opencv/opencv_contrib joining the core of "OpenCV":https://github.com/opencv/opencv in this uppcoming release 3.3
*** DNN is a module that reads deep net models trained by other frameworks and runs them efficiently
**** This is especially true on Intel CPUs and Intel GPUs (*Thanks Intel for the support!!!*), but 
**** DNN will run other networks efficiently in general due to optimized C++ and increasing use of Halide. 
***** This is still a work in progress (the Halide parts are not intensively optimized yet, still they perform well), but advancing rapidly.
**** DNN now reads and optimizes run times for the following major CNN libraries:
***** Caffe
***** TensorFlow
***** Torch
***** By end of summer, it should also cover OpenCV's "tiny_dnn library":https://github.com/tiny-dnn/tiny-dnn
*** "See the wiki page for DNN Module performance":https://github.com/opencv/opencv/wiki/DNN-efficiency-measurements
*** For comparison (and we might start to contribute to this) see below:
**** *NOTE:*
***** These numbers are either much slower because they on mobile chips, or
***** they are faster because they use a more powerful GPU.
**** Excellent site: "Overall performance of CNNs":http://cknowledge.org/repo/web.php?action=index&module_uoa=wfe&native_action=show&native_module_uoa=program.optimization

* Discussed deep neural network frameworks:

|   Framework| State                                                                                   |
|-----------:|-----------------------------------------------------------------------------------------|
|     OpenCV | https://github.com/opencv/opencv/commit/d27009c775307e18d28da430862665ef1934d400        |
|        DNN | https://github.com/opencv/opencv_contrib/commit/e551d15c2b58edce36fe5a5c23072cbe6ce74a93|
|    clCaffe | https://github.com/BVLC/caffe/commit/483c58f5f46b5959dc0a978882843713daae18f6           |
| TensorFlow | https://github.com/tensorflow/tensorflow/commit/1ec6ed51182adf8f1b03a3188c16cd8a45ca6c85|
|      Torch | https://github.com/torch/distro/tree/748f5e3c5c804eebf5715c0b47b1519d60ef4409           |
|     Halide | https://github.com/halide/Halide/commit/abef1d9bf6cb3f866393fa4c5f48726f728285ee        |
| LLVM/Clang | 4.0.0                                                                                   |


h3. *_To Dos_*
* -Send out notice to review your student-


<pre>
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-06-20

h3. _*Agenda*_
* GSoC
* Meeting time

h3. *_Minutes_*
* GSoC
** All projects going, send in pull request reminder
* Vadim won't make it, might want to move these meeetings half an hour later
* DNN next year
** Might focus on DNN reading tiny-dnn output
** Model zoo for pragmatic things

h3. *_To Dos_*
* Send out pull request reminder


<pre>
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-06-13

h3. _*Agenda*_
* GSoC
* Contributors
* DNN

h3. *_Minutes_*
* GSoC
** June 26 is phase 1 evaluations
* DNN (runs embedded deep nets optimized for the hardware)
** Moving to core
** Theano group joined to the backend project, tiny-dnn involved in discussion
*** Common effort for interfaces for kernels, lead by Tianqi Chen with Caffe2 (Yang Qing) etc
** Halide type backend, University of Washington (also involved with MXNet
*** "dmlc/dlpack":https://github.com/dmlc/dlpack
* tiny-dnn
** Moving to dmlc/dlpack backend
** Work well with cv::Mat back and forth
*** dlpack doesn't seem to like OpenVX
**** OpenVX closer to 
** OpenCL kernel for Caffe is involved in dlpack but DNN new kernel in Halide
* Squeeze net 

h3. *_To Dos_*
* -Note out to get ready-
* -Check with student-
* -Ask Vadim about dlpack Halide kernels vs DNN Halide kernels-

<pre>
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-06-06

h3. _*Agenda*_
* OpenCV
* GSoC  template

h3. *_Minutes_*
* OpenCV
** Tutorial at CVPR
** 2 releases will come out
** 3.3 release candidate out w/in 2 weeks (hope it includes openvx backend, allows flowgraph for dnn modules)
** At least 8 core people
*** DNN from contrib to main
**** pytorch different from torch
**** Caffe1 but not yet 2  difference in padding of arrays
**** Tensorflow and Caffe use different layouts ... need tricks ... also flattened layers
***** 1D representations have different orderings. Might be better to wait
***** Then, there are kernel specializations for specialized hardware ... might take years to settle out
**** Then there is research in shrinking kernels
**** Support various blas version, openvx, 
***** Regression tests run over many implementations which help insure capability/similarity to run most backends
** support ganz opencl 
*** Halide patches in. Block tensors into "voxels" for efficient convolution 
**** MKL dnn approach
**** opencl kernels
*** tiny_dnn, 
**** maybe Halide with some of the upstream engine nnpack
* Halide
** Might want a better cross integration
** cudnn
** might have larger impact across 
** difference from openvx approach?
* GSoC
** Maksim Shabunin sent out a pull request template
** Weekly reports on mailing list
** Get a git summary out to everyone
* Git 
** Sourcetreee (mac)
** Smartgit (cross platform)
** tortoise (windows)
** gitkraken  (cross platform)
** atom editor, git and github

h3. *_To Dos_*
* -Ask student to send summary reports regularly (encouraged) ... short-
* -Refine the pull request summary-
* 



<pre>
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-05-30

h3. _*Agenda*_

* GSoC
* Foundation

h3. *_Minutes_*

* GSoC
** Contribution template out
* Foundation
** Can OpenCV.org hold the domain for tiny_dnn?
** OpenCV/tiny_dnn.org
*** Github?
**** Build bots for github: 
***** Travis OS X, Linux,
***** For windows: https://www.appveyor.com/
** Kernels for near metal applications
*** Tensor Flow optimization on Intel "TensorFlow On Intel":https://software.intel.com/en-us/articles/tensorflow-optimizations-on-modern-intel-architecture
*** GTech -- minimum tensor data structure for optimization access across architectures
**** "Dlpack":https://github.com/dmlc/dlpack
**** NNVM computation graph for deep nets "NNVM":https://github.com/dmlc/nnvm
***** "_computation graph optimization such as memory reduction, device allocation and more while being agnostic to the operator interface definition and how operators are executed_"
***** "Tianqi Chen":https://homes.cs.washington.edu/~tqchen/ driving this https://github.com/tqchen
** Halide framework for opencv, deep in Intel. Best to relate
** "Intel Scheme (see figure 1)":https://software.intel.com/en-us/articles/accelerating-deep-learning-inference-with-intel-processor-graphics


h3. *_To Dos_*

* Write Vadim about tiny_dnn under the opencv domain/github cross links

<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-05-23

h3. _*Agenda*_

* GSoC needs

h3. *_Minutes_*

* Deep NN students need GPU cycles
*** For text detection etc
** Lambda Labs?
** Google?

* MRF code


h3. *_To Dos_*

* Ask about Intel release of Halide Deep network kernels
* 501c3 filing
* Notice to prime students to begin GSoC!
** Who might need GPU access?
* Ask for GPU resources for tiny_dnn students
** Lambda labs with pre-trained model zoo?

<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-05-16

h3. _*Agenda*_

* GSoC pull template
* Image corruption bug

h3. *_Minutes_*

* GSoC pull template
** Need to create a template of how to do a pull request with all unit tests, examples 
* Image corruption bug
** We could get money ! (And maybe that would have found the security bug)
*** https://opensource.googleblog.com/2017/05/oss-fuzz-five-months-later-and.html
** Vadim on it
** Need to see Coverity checks
*** https://scan.coverity.com/
** Foundation will need to consider all this
* Projects
** Docs for all languages, 
** Doc writer got accepted in MIT
* tiny_dnn
** Where does it sit in the deepnet ecosystem?
*** Simple front end
*** Reach to good backends
**** Use xtensor to extend
***** https://github.com/QuantStack/xtensor
*** ARM, GPU, Intel ...Easy to use the best for each
** Will be integrated with GPU for training after this summer of code.
** Auto difference engine with GPU backend, cudadnn, libdnn, 
* Projects, OpenCV GSoC 2017:

# API for Facial Landmark Detector
# Computational Occlusion Removal in Image Inpainting
# Create Web-based Interactive Tutorials and Examples for OpenCV
# Documentation Improvement
# End to End text detection and recognition
# Face alignment with opencv
# GPU enabled deep learning framework
# Implementing and extending DynamicFusion (Newcombe et al 2015)
# Improve and Extend the JavaScript Bindings for OpenCV
# Improve Background Subtraction with Aggregated Saliency
# Improvement of the background subtraction algorithm
# Learning compact models for object detection
# Photometric Calibration
# Recurrent Neural Networks on tiny-dnn
# Speeding-up AKAZE features
# The Fast Bilateral Solver

h3. *_To Dos_*

* Gary
** Get in the pull template for students
** Get cash amount for schwag to Vincent
** Maxim emails for docs
** -Check on tiny_dnn-


<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-05-09

h3. _*Agenda*_

* GSoC pull requests

h3. *_Minutes_*

* Need to contact Vadim to put together a pull request template.
* Get students and mentors going
* Create tracking spreadsheet



h3. *_To Dos_*

* Gary
** Get in the pull template for students
** -Projects and mentors list onto site-
** Get cash amount for schwag to Vincent
** -Contact G about $ for "event"-
** -Vadim, dinner-

<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-04-18

h3. _*Agenda*_

* Slot requests are in
* Hallide

h3. *_Minutes_*

* Experiments are ongoing with "Halide":http://halide-lang.org/

<pre><code>Func blur_3x3(Func input) {
  Func blur_x, blur_y;
  Var x, y, xi, yi;

  // The algorithm - no storage or order
  blur_x(x, y) = (input(x-1, y) + input(x, y) + input(x+1, y))/3;
  blur_y(x, y) = (blur_x(x, y-1) + blur_x(x, y) + blur_x(x, y+1))/3;

  // The schedule - defines order, locality; implies storage
  blur_y.tile(x, y, xi, yi, 256, 32)
        .vectorize(xi, 8).parallel(y);
  blur_x.compute_at(blur_y, x).vectorize(x, 8);

  return blur_y;
}</code></pre>

*** It's library in C++, but limited operators
*** Good for image processing, deep nets
*** Not good if your code needs logical operators w/in the processing loop
**** The gradients of Canny operator yes, not the line thinning
** Maybe something out by CVPR
** Ability to implement kernels in Halide
* GSoC 2017
** Our slot asks are in
** We find out allocation tomorrow, April 19
** We will then have an email conference of the admins
*** We will scrape the list, if we feel we have too many slots, we'll try to return unneeded ones quickly.
* CVPR 2017
** Vadim will give a tutorial there
** Several of us will be there (Vincent, Vadim, Gary)

h3. *_To Dos_*

* -Book CVPR-
 
<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-04-11

h3. _*Agenda*_

* GSoC reviews by mentors

h3. *_Minutes_*

* Mentors need to rate the proposals and select people 


h3. *_To Dos_*

* 


<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-03-28

h3. _*Agenda*_

* GSoC decisions

h3. *_Minutes_*

* For DNN (just reading and running nets trained in Torch, TenserFlow, Caffe etc), it will translate to Halide and then run taking advantage of the architecture.
** Going to OpenCL straight can result in unstable code, this way you generate efficient OpenCL for GPU.
* We have a strong mentor for SLAM this year ... might go with it if we can find the right student.
* Stereo via flow net
* Support for Halide? Seems great for basic deepnet stuff, simple image processing
** See Idea 17 https://github.com/opencv/opencv/wiki/GSoC_2017#2017-project-ideas
* Would be great to get a model zoo of squeezed, high performance deep nets for DNN or for tiny-dnn, these are highly useful.
*


h3. *_To Dos_*

* -Gary to send out reminder for students to apply to the GSoC site-
* -Gary to remind mentors to start reviewing/deciding on possible/students/topics ... commit.-


<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-03-21

h3. _*Agenda*_

* GSoC -- gather in the mentors
* Ideas

h3. *_Minutes_*

* GSoC
** Can we develop radically smaller deep networks for text detection. Squeeze nets?
**
* DNN will read Torch, Caffe, TensorFlow and run it fast.
* "Colormap for SFM and multi-view":https://github.com/colmap/colmap is "cool":https://colmap.github.io/ , but its GPL.

* Gary to send out another announcement to post on GSOC site
** Submit via google doc
** 

<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-03-14

h3. _*Agenda*_

* GSoC -- gather in the mentors
* Ideas

h3. *_Minutes_*

* Admins were screwed up by daylight savings, so most of the team missed the meeting. It was decided anyhow that the main useful activity is to review student proposals. Go to:
** "https://groups.google.com/forum/#!forum/opencv-gsoc-2017":https://groups.google.com/forum/#!forum/opencv-gsoc-2017
* JPEGXS (sequences) https://jpeg.org/jpegxs/
* JPEG lightfield https://jpeg.org/items/20170208_cfp_pleno.html
* GSOC
** Curved edge detection
*

h3. *_Reports_*




<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-03-07

h3. _*Agenda*_

* GSoC -- gather in the mentors
* Ideas

h3. *_Minutes_*

* Gathering mentors

   # Vincent
   # Vadim
   # Gary
   # Stefano
   # Grace
   # Pras?
   # Reza?
   # Edgar
   # Ethan?
   # Michael?
   # Yida?
   # Antonella
   # Delia
   # Maksim
   # StevenP
   # Manuele?
   # noumi?

* Ideas
** Generalized ROI
*** see https://github.com/kokkos/array_ref/blob/master/proposals/P0331.rst
** Optimizations
** Improve 3D viewer for colorized normals
** vis improvements
*** http://www.vtk.org/Wiki/VTK/Examples/Cxx/Points/NormalEstimation
** Normals might be here
*** http://www.docs.opencv.org/master/d5/dd8/classcv_1_1viz_1_1WCloudNormals.html
** Can we encourage improving or developing simpler but important functionality
** Intel DNN
*** "Halide language":http://halide-lang.org/

h3. *_Reports_*


<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-02-18

h3. _*Agenda*_

* GSoC

h3. *_Minutes_*

* GSoC
* RGBD
** 3D visualizer add normals and colorized normals
** VTK toolkit has all the "tools" to do whatever
*** For example, expose: http://www.vtk.org/Wiki/VTK/Examples/Cxx/Visualization/ElevationBandsWithGlyphs
* Tiny-dnn
** Needs mentor
* Recruit mentors
** Edgar
** Original tiny-dnn author

h3. *_Reports_*

<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-02-14

h3. _*Agenda*_

* GSoC



h3. *_Minutes_*

* 

* GSoC
* focusing on organizing tiny_dnn group

h3. *_Reports_*

<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-02-07

h3. _*Agenda*_

* GSoC
* OpenCV.js very interesting


h3. *_Minutes_*

* OpenCV.js  OpenCV in javascript. Looks very interesting
** [[https://github.com/ucisysarch]]
** Examples
*** [[http://ucisysarch.github.io/opencvjs/examples/img_proc.html]]
*** [[http://ucisysarch.github.io/opencvjs/examples/face_detect.html]]

* GSoC
* Our application is complete
* Developers can put ideas into the "OpenCV ideas page":https://github.com/opencv/opencv/wiki/GSoC_2017
* Halide? [[http://halide-lang.org/]]


h3. *_Reports_*

* . Vadim



h3. *_Action Items_*

*Gary*

* .

*Vincent*

* .

*Vadim*

* .

*Grace*

* .




<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-01-30

h3. _*Agenda*_

* GSoC


h3. *_Minutes_*

* GSoC
** DNN Intel contributing 
*** Training mini-batch -- can be pluralized across samples
*** Inference -- one sample
** Project to detect useful objects
*** Face
*** Pedestrian 
*** Car
*** Smaller architectures is 50x smaller than Alex net for example
**** Optimization on mobile -- model has to be compact, just a few GFLOPs, run quantized, code flow should be optimized for the architecture but this is beyond scope for a student
** Squeeze net ... tiny_dnn
*** Gam low power
** Improving Tutorials
*** How to use the deep learning
*** Update existing tutorials
*** Tracking
*** Computational photography
*** Camera calibration
*** Video stabilization ... or improve it
*** Image stitching 
** April tags or Aruco to make a true checkerboard as tags 
** Improve Aruco and Charuco code
** SLAM ? All efforts have failed. Only if we can find someone far along in a related thesis
** Better background subtraction
*** Deep?  
*** Current MoG has a flaw -- all pixels independently -- no smoothness, spacial constraints
** --We have better optical flow now--
** Better saliency model. Improve saliency API
** Video stabilization, or just improve tutorial
** Labeling module ...
*** Improve VATIC (contact authors?)
**** [[https://github.com/cvondrick/vatic]]
**** [[http://web.mit.edu/vondrick/vatic/]]
** OpenCV for artistic interaction
*** Natural interaction 
*** Hand pose? 
** Text detection improvement ... better datasets. 

* Hard to know quality level of different code in contrib
** Put quality, optimization, GPU optimiztion, in Wiki
** computational photography
** SFM
** Make a Wiki to track
** Tracking with CNN doesn't have GPU optimization


h3. *_Reports_*

* . Vadim



h3. *_Action Items_*

*Gary*

* .

*Vincent*

* .

*Vadim*

* .

*Grace*

* .





***



[[Meeting_notes]]