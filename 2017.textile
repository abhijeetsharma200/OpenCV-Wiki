h1. 2017  OpenCV Meeting notes

Template is at http://code.opencv.org/projects/opencv/wiki/Template
http://code.opencv.org/help/wiki_syntax

[[Meeting_notes]]

<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-05-16

h3. _*Agenda*_

* GSoC pull template
* Image corruption bug

h3. *_Minutes_*

* GSoC pull template
** Need to create a template of how to do a pull request with all unit tests, examples 
* Image corruption bug
** We could get money ! (And maybe that would have found the security bug)
*** https://opensource.googleblog.com/2017/05/oss-fuzz-five-months-later-and.html
** Vadim on it
** Need to see Coverity checks
*** https://scan.coverity.com/
** Foundation will need to consider all this
* Projects
** Docs for all languages, 
** Doc writer got accepted in MIT
* tiny_dnn
** Where does it sit in the deepnet ecosystem?
*** Simple front end
*** Reach to good backends
**** Use xtensor to extend
***** https://github.com/QuantStack/xtensor
*** ARM, GPU, Intel ...Easy to use the best for each
** Will be integrated with GPU for training after this summer of code.
** Auto difference engine with GPU backend, cudadnn, libdnn, 
* Projects, OpenCV GSoC 2017:

# API for Facial Landmark Detector
# Computational Occlusion Removal in Image Inpainting
# Create Web-based Interactive Tutorials and Examples for OpenCV
# Documentation Improvement
# End to End text detection and recognition
# Face alignment with opencv
# GPU enabled deep learning framework
# Implementing and extending DynamicFusion (Newcombe et al 2015)
# Improve and Extend the JavaScript Bindings for OpenCV
# Improve Background Subtraction with Aggregated Saliency
# Improvement of the background subtraction algorithm
# Learning compact models for object detection
# Photometric Calibration
# Recurrent Neural Networks on tiny-dnn
# Speeding-up AKAZE features
# The Fast Bilateral Solver

h3. *_To Dos_*

* Gary
** Get in the pull template for students
** Get cash amount for schwag to Vincent
** Maxim emails for docs
** Check on tiny_dnn


<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-05-09

h3. _*Agenda*_

* GSoC pull requests

h3. *_Minutes_*

* Need to contact Vadim to put together a pull request template.
* Get students and mentors going
* Create tracking spreadsheet



h3. *_To Dos_*

* Gary
** Get in the pull template for students
** -Projects and mentors list onto site-
** Get cash amount for schwag to Vincent
** -Contact G about $ for "event"-
** -Vadim, dinner-

<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-04-18

h3. _*Agenda*_

* Slot requests are in
* Hallide

h3. *_Minutes_*

* Experiments are ongoing with "Halide":http://halide-lang.org/

<pre><code>Func blur_3x3(Func input) {
  Func blur_x, blur_y;
  Var x, y, xi, yi;

  // The algorithm - no storage or order
  blur_x(x, y) = (input(x-1, y) + input(x, y) + input(x+1, y))/3;
  blur_y(x, y) = (blur_x(x, y-1) + blur_x(x, y) + blur_x(x, y+1))/3;

  // The schedule - defines order, locality; implies storage
  blur_y.tile(x, y, xi, yi, 256, 32)
        .vectorize(xi, 8).parallel(y);
  blur_x.compute_at(blur_y, x).vectorize(x, 8);

  return blur_y;
}</code></pre>

*** It's library in C++, but limited operators
*** Good for image processing, deep nets
*** Not good if your code needs logical operators w/in the processing loop
**** The gradients of Canny operator yes, not the line thinning
** Maybe something out by CVPR
** Ability to implement kernels in Halide
* GSoC 2017
** Our slot asks are in
** We find out allocation tomorrow, April 19
** We will then have an email conference of the admins
*** We will scrape the list, if we feel we have too many slots, we'll try to return unneeded ones quickly.
* CVPR 2017
** Vadim will give a tutorial there
** Several of us will be there (Vincent, Vadim, Gary)

h3. *_To Dos_*

* -Book CVPR-
 
<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-04-11

h3. _*Agenda*_

* GSoC reviews by mentors

h3. *_Minutes_*

* Mentors need to rate the proposals and select people 


h3. *_To Dos_*

* 


<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-03-28

h3. _*Agenda*_

* GSoC decisions

h3. *_Minutes_*

* For DNN (just reading and running nets trained in Torch, TenserFlow, Caffe etc), it will translate to Halide and then run taking advantage of the architecture.
** Going to OpenCL straight can result in unstable code, this way you generate efficient OpenCL for GPU.
* We have a strong mentor for SLAM this year ... might go with it if we can find the right student.
* Stereo via flow net
* Support for Halide? Seems great for basic deepnet stuff, simple image processing
** See Idea 17 https://github.com/opencv/opencv/wiki/GSoC_2017#2017-project-ideas
* Would be great to get a model zoo of squeezed, high performance deep nets for DNN or for tiny-dnn, these are highly useful.
*


h3. *_To Dos_*

* -Gary to send out reminder for students to apply to the GSoC site-
* -Gary to remind mentors to start reviewing/deciding on possible/students/topics ... commit.-


<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-03-21

h3. _*Agenda*_

* GSoC -- gather in the mentors
* Ideas

h3. *_Minutes_*

* GSoC
** Can we develop radically smaller deep networks for text detection. Squeeze nets?
**
* DNN will read Torch, Caffe, TensorFlow and run it fast.
* "Colormap for SFM and multi-view":https://github.com/colmap/colmap is "cool":https://colmap.github.io/ , but its GPL.

* Gary to send out another announcement to post on GSOC site
** Submit via google doc
** 

<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-03-14

h3. _*Agenda*_

* GSoC -- gather in the mentors
* Ideas

h3. *_Minutes_*

* Admins were screwed up by daylight savings, so most of the team missed the meeting. It was decided anyhow that the main useful activity is to review student proposals. Go to:
** "https://groups.google.com/forum/#!forum/opencv-gsoc-2017":https://groups.google.com/forum/#!forum/opencv-gsoc-2017
* JPEGXS (sequences) https://jpeg.org/jpegxs/
* JPEG lightfield https://jpeg.org/items/20170208_cfp_pleno.html
* GSOC
** Curved edge detection
*

h3. *_Reports_*




<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-03-07

h3. _*Agenda*_

* GSoC -- gather in the mentors
* Ideas

h3. *_Minutes_*

* Gathering mentors

   # Vincent
   # Vadim
   # Gary
   # Stefano
   # Grace
   # Pras?
   # Reza?
   # Edgar
   # Ethan?
   # Michael?
   # Yida?
   # Antonella
   # Delia
   # Maksim
   # StevenP
   # Manuele?
   # noumi?

* Ideas
** Generalized ROI
*** see https://github.com/kokkos/array_ref/blob/master/proposals/P0331.rst
** Optimizations
** Improve 3D viewer for colorized normals
** vis improvements
*** http://www.vtk.org/Wiki/VTK/Examples/Cxx/Points/NormalEstimation
** Normals might be here
*** http://www.docs.opencv.org/master/d5/dd8/classcv_1_1viz_1_1WCloudNormals.html
** Can we encourage improving or developing simpler but important functionality
** Intel DNN
*** "Halide language":http://halide-lang.org/

h3. *_Reports_*


<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-02-18

h3. _*Agenda*_

* GSoC

h3. *_Minutes_*

* GSoC
* RGBD
** 3D visualizer add normals and colorized normals
** VTK toolkit has all the "tools" to do whatever
*** For example, expose: http://www.vtk.org/Wiki/VTK/Examples/Cxx/Visualization/ElevationBandsWithGlyphs
* Tiny-dnn
** Needs mentor
* Recruit mentors
** Edgar
** Original tiny-dnn author

h3. *_Reports_*

<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-02-14

h3. _*Agenda*_

* GSoC



h3. *_Minutes_*

* 

* GSoC
* focusing on organizing tiny_dnn group

h3. *_Reports_*

<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-02-07

h3. _*Agenda*_

* GSoC
* OpenCV.js very interesting


h3. *_Minutes_*

* OpenCV.js  OpenCV in javascript. Looks very interesting
** [[https://github.com/ucisysarch]]
** Examples
*** [[http://ucisysarch.github.io/opencvjs/examples/img_proc.html]]
*** [[http://ucisysarch.github.io/opencvjs/examples/face_detect.html]]

* GSoC
* Our application is complete
* Developers can put ideas into the "OpenCV ideas page":https://github.com/opencv/opencv/wiki/GSoC_2017
* Halide? [[http://halide-lang.org/]]


h3. *_Reports_*

* . Vadim



h3. *_Action Items_*

*Gary*

* .

*Vincent*

* .

*Vadim*

* .

*Grace*

* .




<pre>
      <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
</pre>

h2. 2017-01-30

h3. _*Agenda*_

* GSoC


h3. *_Minutes_*

* GSoC
** DNN Intel contributing 
*** Training mini-batch -- can be pluralized across samples
*** Inference -- one sample
** Project to detect useful objects
*** Face
*** Pedestrian 
*** Car
*** Smaller architectures is 50x smaller than Alex net for example
**** Optimization on mobile -- model has to be compact, just a few GFLOPs, run quantized, code flow should be optimized for the architecture but this is beyond scope for a student
** Squeeze net ... tiny_dnn
*** Gam low power
** Improving Tutorials
*** How to use the deep learning
*** Update existing tutorials
*** Tracking
*** Computational photography
*** Camera calibration
*** Video stabilization ... or improve it
*** Image stitching 
** April tags or Aruco to make a true checkerboard as tags 
** Improve Aruco and Charuco code
** SLAM ? All efforts have failed. Only if we can find someone far along in a related thesis
** Better background subtraction
*** Deep?  
*** Current MoG has a flaw -- all pixels independently -- no smoothness, spacial constraints
** --We have better optical flow now--
** Better saliency model. Improve saliency API
** Video stabilization, or just improve tutorial
** Labeling module ...
*** Improve VATIC (contact authors?)
**** [[https://github.com/cvondrick/vatic]]
**** [[http://web.mit.edu/vondrick/vatic/]]
** OpenCV for artistic interaction
*** Natural interaction 
*** Hand pose? 
** Text detection improvement ... better datasets. 

* Hard to know quality level of different code in contrib
** Put quality, optimization, GPU optimiztion, in Wiki
** computational photography
** SFM
** Make a Wiki to track
** Tracking with CNN doesn't have GPU optimization


h3. *_Reports_*

* . Vadim



h3. *_Action Items_*

*Gary*

* .

*Vincent*

* .

*Vadim*

* .

*Grace*

* .





***



[[Meeting_notes]]